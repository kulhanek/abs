#!/bin/bash
# ==============================================================================
# ABS
# (c) 2017, Petr Kulhanek, kulhanek@chemi.muni.cz
# (c) 2012, Petr Kulhanek, kulhanek@chemi.muni.cz
# (c) 2008-2009, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.9
# (c) 2006, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.8
# (c) 2005, Petr Kulhanek, kulhanek@chemi.muni.cz
# based on LCC module v1 - v5
# (c) 2001-2004, Petr Kulhanek, kulhanek@chemi.muni.cz
# ==============================================================================

# ------------------------------------------------------------------------------
# mark this job as INFINITY job, this is used by module-add-stat
export _INFINITY_JOB_="_INFINITY_JOB_"

# header -----------------------------------------------------------------------

_DATE=`date`

echo
echo "################################################################################"
echo "#                          *** INFINITY JOB ***                                #"
echo "#                                                                              #"
echo "###                  Beggining of the script execution                      ####"
echo "#                                                                              #"
echo "# # Date: `printf %-67s \"$_DATE\"`# #"
echo "#                                                                              #"
echo "################################################################################"
echo
echo "Initial job information (recovered from transmitted environment):"
echo "--------------------------------------------------------------------------------"
echo "Job name             : $INF_JOB_NAME"
echo "Job name suffix      : $INF_JOB_NAME_SUFFIX"
echo "Job input machine    : $INF_INPUT_MACHINE"
echo "Job input dir        : $INF_INPUT_DIR"
echo "Job storage machine  : $INF_STORAGE_MACHINE"
echo "Job storage path     : $INF_STORAGE_DIR"
echo "Job key              : $INF_JOB_KEY"
echo "------------------------------------------------------"
echo "Hostname             : `hostname -f`"
echo "AMS boot script      : $INF_BOOT_SCRIPT"
echo "Site support         : $AMS_SITE_SUPPORT"
echo "Site ID              : $INF_SITE_ID"
echo "ABS module version   : $INF_ABS_VERSION"
echo "ABS Root             : $ABS_ROOT"

echo ""
echo "#-------------------------------------------------------------------------------"
echo "# L0: Booting the AMS/ABS environments ..."
echo "#-------------------------------------------------------------------------------"
echo ""
echo "# User identity ..."
id | tr ' ' '\n'
echo "umask=`umask`"
echo

if ! [ -d "$ABS_ROOT" ]; then
    echo "" >&2
    echo " ERROR: The ABS_ROOT directory does not exist!" >&2
    echo "" >&2
    exit 1
fi

# boot AMS ---------------------------------------------------------------------
if [ -f "$INF_BOOT_SCRIPT" ]; then
    # boot AMS system
    source $INF_BOOT_SCRIPT
fi

echo "# site -v activate $INF_SITE_ID"

site -v activate "$INF_SITE_ID"

if [ $? -ne 0 ]; then
    echo "" >&2
    echo " ERROR: Unable to activate the site ($INF_SITE_ID)!" >&2
    echo "        Please send contents of this output to the site support: $AMS_SITE_SUPPORT" >&2
    echo "" >&2
    exit 1
fi

# do not use the host chache as it can be outdated
echo "# ams-host --nocache"

ams-host --nocache

echo "# amsmodule --system add abs:$INF_ABS_VERSION"

# here we should use the same version as it was used for job submision
amsmodule --system add abs:$INF_ABS_VERSION

if [ $? -ne 0 ]; then
    echo "" >&2
    echo " ERROR: Unable to add the 'abs:$INF_MODULE_VERS' module!" >&2
    echo "        Please send contents of this output to the site support: $AMS_SITE_SUPPORT" >&2
    echo "" >&2
    exit 1
fi

# we need modified rsync
echo "# amsmodule --system add abs-rsync"

amsmodule --system add abs-rsync

if [ $? -ne 0 ]; then
    echo "" >&2
    echo " ERROR: Unable to add the 'abs-rsync' module!" >&2
    echo "        Please send contents of this output to the site support: $AMS_SITE_SUPPORT" >&2
    echo "" >&2
    exit 1
fi

if ! [ -e "$ABS_RSYNC" ]; then
    echo "" >&2
    echo " ERROR: '$ABS_RSYNC' is not executable!" >&2
    echo "        Please send contents of this output to the site support: $AMS_SITE_SUPPORT" >&2
    echo "" >&2
    exit 1
fi

# print rsync version and capabilities
$ABS_RSYNC --version

# ==============================================================================

# load ABS library
source $ABS_ROOT/share/scripts/abs-execution-script-LL

# Restore job environment ...
source $ABS_ROOT/share/scripts/abs-execution-script-L1

# Prepare working directory ...
source $ABS_ROOT/share/scripts/abs-execution-script-L2

# Copy input job data ...
source $ABS_ROOT/share/scripts/abs-execution-script-L3

# Start job ...
source $ABS_ROOT/share/scripts/abs-execution-script-L4

# Sync data ...
source $ABS_ROOT/share/scripts/abs-execution-script-L5 

# Clean ...
source $ABS_ROOT/share/scripts/abs-execution-script-L6 

# =============================================================================

echo
echo "################################################################################"
echo "#                                                                              #"
echo "# # Date: `printf %-67s \"$_DATE\"`# #"
echo "#                                                                              #"
echo "###                      End of the script execution                        ####"
echo "#                                                                              #"
echo "################################################################################"
echo


