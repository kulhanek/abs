#!/bin/bash
# ==============================================================================
# ABS
# (c) 2012, Petr Kulhanek, kulhanek@chemi.muni.cz
# (c) 2008-2009, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.9
# (c) 2006, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.8
# (c) 2005, Petr Kulhanek, kulhanek@chemi.muni.cz
# based on LCC module v1 - v5
# (c) 2001-2004, Petr Kulhanek, kulhanek@chemi.muni.cz
# ==============================================================================

# INF_GO_MAIN_NODE
# INF_GO_INPUT_MACHINE
# INF_GO_INPUT_DIR
# INF_GO_JOB_NAME
# INF_GO_JOB_KEY
# INF_GO_AGENT_MODULE
# INF_GO_VNC_ID
# INF_GO_WHOLE_NAME
# INF_GO_SITE_ID

# global setup
INF_SSH_OPTIONS=`$ABS_ROOT/sbin/abs-get-setup-item INF_SSH_OPTIONS`
if [ $? -ne 0 ]; then INF_SSH_OPTIONS="-o StrictHostKeyChecking=no"; fi
export INF_SSH_OPTIONS

# this is inline script
case "$INF_GO_JOB_NAME" in
    cli )   
        if [ -n "$INF_GO_SITE_ID" ] && [ -n "$INF_GO_AGENT_MODULE" ] && \
           [ -n "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_JOB_KEY" ]; then
            ssh -t -X $INF_SSH_OPTIONS "$INF_GO_MAIN_NODE" " \
                site activate $INF_GO_SITE_ID; \
                amsmodule add $INF_GO_AGENT_MODULE; \
                if [ \$? -ne 0 ]; then \
                    echo \"\" >&2; \
                    echo \" >>> ERROR: Unable to activate a CLI agent module '$INF_GO_AGENT_MODULE'!\" >&2; \
                    echo \"\" >&2; \
                    exit 1; \
                fi; \
                screen -d -r \"T$INF_GO_JOB_KEY\"; \
                "
            return $?
        fi
        return 0
        ;;
    gui )
        if [ -n "$INF_GO_AGENT_MODULE" ] && [ -n "$INF_GO_VNC_ID" ] && [ -n "$INF_GO_WHOLE_NAME" ] ; then
            if [ "$INF_GO_GUI_PROXY" != "ssh-proxy" ]; then
                amsmodule add "$INF_GO_AGENT_MODULE"
                if [ $? -ne 0 ]; then
                    echo "" >&2
                    echo " >>> ERROR: Unable to activate a GUI agent module '$INF_GO_AGENT_MODULE'!" >&2
                    echo "" >&2
                    return 1
                fi
                vncviewer "$INF_GO_VNC_ID" -passwd "${INF_GO_WHOLE_NAME}.vncpsw"
                return $?
            else
                echo -n " >>> INFO: Starting VNC proxy .... "
                FREEPORT=0
                set -o pipefail
                for((PORT=1;PORT<=100;PORT++)); do
                    netstat -lnp | grep 0.0.0.0:$((5900+$PORT)) &> /dev/null
                    if [ $? -ne 0 ]; then
                        FREEPORT=$PORT;
                        break;
                    fi
                done
                if [ "$FREEPORT" -eq 0 ]; then
                    echo ""
                    echo "" >&2
                    echo " >>> ERROR: No available ports in the range <5901; 6000>!" >&2
                    echo "" >&2
                    return 1
                fi
                INF_REMOTE_NODE="`echo $cut -d ':' -f 1`"
                INF_REMOTE_PORT="`echo $cut -d ':' -f 2`"
                echo "`hostname -f`:$FREEPORT"
                echo "              Password: `cat ${INF_GO_WHOLE_NAME}.vncpsw`"
                echo ""
                echo "              To terminate the proxy, press Enter."
                ssh -L "$((5900+$FREEPORT)):0.0.0.0:$((5900+$INF_REMOTE_PORT))" "$INF_REMOTE_NODE" read
                echo ""
            fi
        fi
        ;;
    * )
        # go to working directory
        if [ -n "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_WORK_DIR" ] && [ -n "$INF_GO_SITE_ID" ] ; then
            ssh -t -X $INF_SSH_OPTIONS $INF_GO_MAIN_NODE \
                      INF_GO_SITE_ID="$INF_GO_SITE_ID" \
                      INF_GO_WORK_DIR="$INF_GO_WORK_DIR" \
                      INF_GO_EXPORTED_MODULES_1="`echo $AMS_EXPORTED_MODULES | tr "|" "%"`" \
                      INF_GO_EXPORTED_MODULES_2="`echo $INF_GO_EXPORTED_MODULES | tr "|" "%"`" \
                      "$ABS_ROOT/share/scripts/abs-go-remote"
            return $?
        fi

        # go to input directory
        if [ -z "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_INPUT_MACHINE" ] && [ -n "$INF_GO_INPUT_DIR" ]; then
            if [ "$INF_GO_INPUT_MACHINE" != "$HOSTNAME" ]; then
                echo ""
                echo " WARNING: The job input directory is located on the remote computer."
                echo "          Job input dir: $INF_GO_INPUT_MACHINE:$INF_GO_INPUT_DIR"
                echo "          Hostname     : $HOSTNAME"
                echo ""
                ssh -t -X $INF_SSH_OPTIONS $INF_GO_INPUT_MACHINE \
                          INF_GO_SITE_ID="$INF_GO_SITE_ID" \
                          INF_GO_WORK_DIR="$INF_GO_INPUT_DIR" \
                          INF_GO_EXPORTED_MODULES_1="`echo $AMS_EXPORTED_MODULES | tr "|" "%"`" \
                          INF_GO_EXPORTED_MODULES_2="" \
                          "$ABS_ROOT/share/scripts/abs-go-remote"
                return $?
            fi
            if ! [ -d "$INF_GO_INPUT_DIR" ]; then
                echo "" >&2
                echo " >>> ERROR: The job input directory does not exist on this host!" >&2
                echo "            $INF_GO_INPUT_DIR" >&2
                echo "" >&2
                return 1
            fi
            echo ""
            cd "$INF_GO_INPUT_DIR"
            if [ $? -eq 0 ]; then
                echo " INFO: The current directory was set to:"
                echo "       $INF_GO_INPUT_DIR"
                echo ""
                return 0
            else
                echo ""
                echo " ERROR: Unable to set current directory to:"
                echo "       $INF_GO_INPUT_DIR"
                echo ""
                return 1
            fi
        fi
        ;;
esac
