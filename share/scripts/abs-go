#!/bin/bash
# ==============================================================================
# ABS
# (c) 2012, Petr Kulhanek, kulhanek@chemi.muni.cz
# (c) 2008-2009, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.9
# (c) 2006, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.8
# (c) 2005, Petr Kulhanek, kulhanek@chemi.muni.cz
# based on LCC module v1 - v5
# (c) 2001-2004, Petr Kulhanek, kulhanek@chemi.muni.cz
# ==============================================================================

# INF_GO_MAIN_NODE
# INF_GO_INPUT_MACHINE
# INF_GO_INPUT_DIR
# INF_GO_JOB_NAME
# INF_GO_JOB_KEY
# INF_GO_AGENT_MODULE
# INF_GO_VNC_ID
# INF_GO_WHOLE_NAME
# INF_GO_SITE_ID
# INF_GO_BOOT_SCRIPT

# global setup
INF_SSH_OPTIONS=`$ABS_ROOT/sbin/abs-get-setup-item INF_SSH_OPTIONS`
if [ $? -ne 0 ]; then INF_SSH_OPTIONS="-o StrictHostKeyChecking=no"; fi
export INF_SSH_OPTIONS

# this is inline script
case "$INF_GO_JOB_NAME" in
    cli )   
        if [ -n "$INF_GO_BOOT_SCRIPT" ] && [ -n "$INF_GO_SITE_ID" ] && [ -n "$INF_GO_AGENT_MODULE" ] && \
           [ -n "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_JOB_KEY" ]; then
            ssh -t -X $INF_SSH_OPTIONS "$INF_GO_MAIN_NODE" " \
                if [ -f ~/.bash_profile ]; then source ~/.bash_profile; fi; \
                if [ -z \"\$AMS_ROOT\" ]; then \
                    source \"$INF_GO_BOOT_SCRIPT\"; \
                    AMS_ALTERNATIVE_BOOT=\"YES\"; \
                fi; \
                site activate $INF_GO_SITE_ID; \
                amsmodule add $INF_GO_AGENT_MODULE; \
                if [ \$? -ne 0 ]; then \
                    echo \"\" >&2; \
                    echo \" >>> ERROR: Unable to activate a CLI agent module '$INF_GO_AGENT_MODULE'!\" >&2; \
                    echo \"\" >&2; \
                    exit 1; \
                fi; \
                screen -d -r \"T$INF_GO_JOB_KEY\"; \
                "
            return $?
        fi
        return 0
        ;;
    gui )
        echo "This is a GUI job."
        echo "Use the following commands to open the VNC viewer from any machine:"
        echo " \$ module add tigervnc"
        echo " \$ vncviewer $INF_GO_VNC_ID"
        echo ""
        ;;
    * )
        # go to working directory
        if [ -n "$INF_GO_BOOT_SCRIPT" ] && [ -n "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_WORK_DIR" ] && [ -n "$INF_GO_SITE_ID" ] ; then
            ssh -t -X $INF_SSH_OPTIONS $INF_GO_MAIN_NODE \
                      INF_GO_BOOT_SCRIPT="$INF_GO_BOOT_SCRIPT" \
                      INF_GO_SITE_ID="$INF_GO_SITE_ID" \
                      INF_GO_WORK_DIR="$INF_GO_WORK_DIR" \
                      INF_GO_EXPORTED_MODULES_1="`echo $AMS_EXPORTED_MODULES | tr "|" "%"`" \
                      INF_GO_EXPORTED_MODULES_2="`echo $INF_GO_EXPORTED_MODULES | tr "|" "%"`" \
                      "$ABS_ROOT/share/scripts/abs-go-remote"
            return $?
        fi

        # go to input directory
        if [ -n "$INF_GO_BOOT_SCRIPT" ] && [ -z "$INF_GO_MAIN_NODE" ] && [ -n "$INF_GO_INPUT_MACHINE" ] && [ -n "$INF_GO_INPUT_DIR" ]; then
            if ! [ -d "$INF_GO_INPUT_DIR" ]; then
                if [ "$INF_GO_INPUT_MACHINE" != "$HOSTNAME" ]; then
                    echo ""
                    echo " WARNING: The job input directory is located on the remote computer."
                    echo "          Job input dir: $INF_GO_INPUT_MACHINE:$INF_GO_INPUT_DIR"
                    echo "          Hostname     : $HOSTNAME"
                    echo ""
                    ssh -t -X $INF_SSH_OPTIONS $INF_GO_INPUT_MACHINE \
                              INF_GO_BOOT_SCRIPT="$INF_GO_BOOT_SCRIPT" \
                              INF_GO_SITE_ID="$INF_GO_SITE_ID" \
                              INF_GO_WORK_DIR="$INF_GO_INPUT_DIR" \
                              INF_GO_EXPORTED_MODULES_1="`echo $AMS_EXPORTED_MODULES | tr "|" "%"`" \
                              INF_GO_EXPORTED_MODULES_2="" \
                              "$ABS_ROOT/share/scripts/abs-go-remote"
                    return $?
                fi
                echo "" >&2
                echo " >>> ERROR: The job input directory does not exist or is inaccessible on this host!" >&2
                echo "            $INF_GO_INPUT_DIR" >&2
                echo "" >&2
                return 1
            fi
            echo ""
            cd "$INF_GO_INPUT_DIR"
            if [ $? -eq 0 ]; then
                echo " INFO: The current directory was set to:"
                echo "       $INF_GO_INPUT_DIR"
                echo ""
                return 0
            else
                echo ""
                echo " ERROR: Unable to set current directory to:"
                echo "       $INF_GO_INPUT_DIR"
                echo ""
                return 1
            fi
        fi
        ;;
esac
