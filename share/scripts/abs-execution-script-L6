#!/bin/bash
# =============================================================================
# ABS
# (c) 2017, Petr Kulhanek, kulhanek@chemi.muni.cz
# (c) 2008-2009, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.9
# (c) 2006, Petr Kulhanek, kulhanek@chemi.muni.cz
# Charon Extension Layer v0.8
# (c) 2005, Petr Kulhanek, kulhanek@chemi.muni.cz
# based on LCC module v1 - v5
# (c) 2001-2004, Petr Kulhanek, kulhanek@chemi.muni.cz
# =============================================================================

echo ""
echo "# ------------------------------------------------------------------------------"
echo "# L6.1: Full job info from the batch system ..."
echo "# ------------------------------------------------------------------------------"
echo

pqstat -j "$INF_JOB_ID"

echo ""
echo "# ------------------------------------------------------------------------------"
echo "# L6.2: Cleaning ijobs nodes if any ..."
echo "# ------------------------------------------------------------------------------"
echo ""
echo "# Working directory  : $INF_WORK_DIR"
echo "# Data OUT copy mode : $INF_DATAOUT"

# get number of ijobs
INF_INFOFILE="$INF_WORK_DIR/${INF_WHOLE_NAME}.info"
NIJOBS="`$ABS_ROOT/sbin/abs-ijobs "$INF_INFOFILE" number`"
if [ $? -eq 0 ]; then
    echo "# Number of ijobs    : $NIJOBS"
    if [ "$NIJOBS" -gt 0 ]; then
        $ABS_ROOT/share/scripts/abs-execution-script-L6-ijobs
    fi
fi

echo ""
echo "# ------------------------------------------------------------------------------"
echo "# L6.3: Cleaning nodes ..."
echo "# ------------------------------------------------------------------------------"
echo ""
echo "# Working directory  : $INF_WORK_DIR"
echo "# Data OUT copy mode : $INF_DATAOUT"

# switch to HOME directory because next commands can remove the current directory
cd

CLEAN_DIR="`$ABS_ROOT/sbin/abs-get-work-dir --type clean $INF_WORK_DIR_TYPE`"
if [ $? -ne -0 ]; then
    echo ""
    echo " >>> ERROR: Unable to get the clean scratch directory path!"
    echo ""
    exit 1
fi
echo "# Clean directory    : $CLEAN_DIR"
INF_CLEAN_DIR="`eval echo "$CLEAN_DIR"`"

if [ -n "$INF_CLEAN_DIR" ]; then
echo "# Clean directory    : $INF_CLEAN_DIR"
echo ""
case $INF_DATAOUT in
    copy-master)
            echo "# Removing the working directories on the working nodes ..."
        for NODE_NAME in `cat $PBS_NODEFILE | sort -u`; do
            echo "  >>> $NODE_NAME:$INF_CLEAN_DIR ---"
            ssh -x "$INF_SSH_OPTIONS" $NODE_NAME "rm -rf \"$INF_CLEAN_DIR\""
        done
        ;;
    copy-shared)
        echo "# Removing the working directory on the main working node ..."
        echo "  >>> $INF_MAIN_NODE:$INF_CLEAN_DIR ---"
        rm -rf "$INF_CLEAN_DIR"
        ;;
    keep)
        echo "# No directory will be removed ..."
        ;;
    esac
else
echo "# Clean directory    : -not specified-"
fi

# ------------------------------------------------------------------------------
# clean IPC

IPC_SCRIPT="$ABS_ROOT/share/scripts/abs-cleanipcs"
if [ -f "$IPC_SCRIPT" ]; then
    echo ""
    echo "# Cleaning IPC stuff on nodes:"
    for NODE_NAME in `cat $PBS_NODEFILE | sort -u`; do
        echo "      $NODE_NAME"
        ssh -x "$INF_SSH_OPTIONS" $NODE_NAME "$IPC_SCRIPT"
    done
fi

# ------------------------------------------------------------------------------

echo ""
echo "# ------------------------------------------------------------------------------"
echo "# L6.4: Current node utilizations ..."
echo "# ------------------------------------------------------------------------------"

for NODE_NAME in `cat $PBS_NODEFILE | sort -u`; do
    echo ""
    echo ">>> $NODE_NAME ----------------------------------"
    ssh -x "$INF_SSH_OPTIONS" $NODE_NAME "top -b -n 1 | awk '{ if( start == 0 ) print \$0; else if( (\$9 > 1) || (\$10 > 1) ) print \$0; } /PID USER/ { start = 1; }'"
done

echo ""
echo "# ------------------------------------------------------------------------------"
echo "# L6.5: Current node kernel states ..."
echo "# ------------------------------------------------------------------------------"

# some machines do not have dmesg with -T option
if dmesg -T 2> /dev/null 1> /dev/null; then
    for NODE_NAME in `cat $PBS_NODEFILE | sort -u`; do
        echo ""
        echo ">>> $NODE_NAME ----------------------------------"
        ssh -x "$INF_SSH_OPTIONS" $NODE_NAME "uname -a; dmesg -T | tail -1000"
    done
else
    for NODE_NAME in `cat $PBS_NODEFILE | sort -u`; do
        echo ""
        echo ">>> $NODE_NAME ----------------------------------"
        ssh -x "$INF_SSH_OPTIONS" $NODE_NAME "uname -a; dmesg | tail -1000"
    done
fi




