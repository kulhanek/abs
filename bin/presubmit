#!/usr/bin/env infinity-env
# ==============================================================================
# Infinity
# (c) 2009,2012,2017 Petr Kulhanek, kulhanek@chemi.muni.cz
# ==============================================================================

echo ""
echo "# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
echo "# presubmit $INF_ARG_DESTINATION $INF_ARG_JOB $INF_ARG_RESOURCES"
echo "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

if [ -z "$INF_ARG_DESTINATION" ] || [ -z "$INF_ARG_JOB" ]; then
    echo "" >&2
    echo " >>> ERROR: The INF_ARG_DESTINATION or INF_ARG_JOB variables are not set!" >&2
    echo "            The job was not resubmited!" >&2
    echo "" >&2
    exit 1
fi

if [ -z "$INF_INPUT_MACHINE" ] || [ -z "$INF_INPUT_DIR" ]; then
    echo "" >&2
    echo " >>> ERROR: The INF_INPUT_MACHINE or INF_INPUT_DIR variables are not set!" >&2
    echo "            The job was not resubmited!" >&2
    echo "" >&2
    exit 1
fi

# determine job suffix
if [ -z "$INF_EXTERNAL_NAME_SUFFIX" ]; then
    export INF_EXTERNAL_NAME_SUFFIX="+002"
else
    NUM=`echo "$INF_EXTERNAL_NAME_SUFFIX" | tr -d "+" | tr -d "-"`
    NUM=`expr $NUM + 1 2> /dev/null`
    export INF_EXTERNAL_NAME_SUFFIX="+`printf %03d $NUM 2> /dev/null`"
fi

# add fixperms=none if not present
if ! [[ $INF_ARG_RESOURCES == *"fixperms=none"* ]]; then
    INF_ARG_RESOURCES="$INF_ARG_RESOURCES fixperms=none"
fi

# sanity checks
if [ "$INF_INPUT_MACHINE_ENABLED_FOR_EXEC" == "NO" ]; then
    if [ -z "$INF_SURROGATE_MACHINES" ]; then
        echo "" >&2
        echo " >>> ERROR: No surrogate machines defined!" >&2
        echo "" >&2
        exit 1
    fi
fi

# input machines
INF_INPUT_MACHINE_LIST=""

if [ "$INF_INPUT_MACHINE_ENABLED_FOR_EXEC" == "YES" ]; then
    echo "# input machine      : $INF_INPUT_MACHINE"
    INF_INPUT_MACHINE_LIST="$INF_INPUT_MACHINE"
fi
if [ -n "$INF_SURROGATE_MACHINES" ]; then
    echo "# surrogate machines : $INF_SURROGATE_MACHINES"
    INF_INPUT_MACHINE_LIST="${INF_INPUT_MACHINE_LIST},${INF_SURROGATE_MACHINES}"
fi

while read INF_INPUT_MACHINE; do
    if [ -z "$INF_INPUT_MACHINE" ]; then
        continue
    fi
    echo ""
    echo -n "# testing the input machine: '$INF_INPUT_MACHINE' ... "
    ssh -x $INF_SSH_OPTIONS -o ConnectTimeout=60 "$INF_INPUT_MACHINE" echo &> /dev/null
    if [ $? -eq 0 ]; then
        echo "connection available"
    else
        echo "no connection available, trying the next one ..."
        continue
    fi
    ssh -x $INF_SSH_OPTIONS "$INF_INPUT_MACHINE" "
                if [ -f ~/.bash_profile ]; then source ~/.bash_profile; fi; \
                if [ -z \"\$AMS_ROOT\" ]; then \
                    source \"$INF_BOOT_SCRIPT\"; \
                fi; \
                site activate $INF_SITE_ID; \
                amsmodule add abs:$INF_ABS_VERSION &> /dev/null; \
                if [ -n \"$INF_EXPORTED_MODULES\" ]; then amsmodule add $INF_EXPORTED_MODULES &> /dev/null; fi; \
                cd \"$INF_INPUT_DIR\"; \
                export INF_EXTERNAL_START_AFTER=$INF_JOB_ID;
                export INF_EXTERNAL_NAME_SUFFIX=\"$INF_EXTERNAL_NAME_SUFFIX\";
                export INF_EXTERNAL_FLAGS=\"$INF_EXTERNAL_FLAGS\";
                psubmit -a -y -i -e -r \"$INF_ARG_DESTINATION\" \"$INF_ARG_JOB\" $INF_ARG_RESOURCES; "

    if [ $? -eq 0 ]; then
        echo "# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
        echo ""
        exit 0
    fi

    echo "" >&2
    echo " >>> ERROR: Unable to submit the next job run to the batch system!" >&2
    echo "            See error messages above." >&2
    echo "            Trying the next input machine ..." >&2
    echo "" >&2

    # put some small delay
    sleep 60

done < <( echo "$INF_INPUT_MACHINE_LIST" | tr ',' '\n' | uniq )

echo "# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
echo ""

exit 1

